name: Build (Sub-Task)
on:
  workflow_call:
    inputs:
      package:
        required: true
        type: boolean
      test:
        required: true
        type: boolean
jobs:
  build-proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 22.x
      # - name: Install Dependencies
      #   run: npm ci
      #   working-directory: workers/b2-proxy
      - name: Zip Worker
        id: zip-b2-proxy
        if: ${{inputs.package}}
        run: |
          workingDirectory=$(pwd)
          cd ./workers/b2-proxy

          zipFile=artifact.zip
          zip -r $zipFile .

          outputDirectory=$workingDirectory/artifacts
          outputFile=$outputDirectory/$zipFile
          mkdir -p $outputDirectory
          cp ./$zipFile $outputFile

          echo 'artifact<<EOF' >> $GITHUB_OUTPUT
          echo $outputFile >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Upload Worker
        if: ${{inputs.package}}
        uses: actions/upload-artifact@v4
        with:
          name: B2-Worker
          path: ${{steps.zip-b2-proxy.outputs.artifact}}
  build-page:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        working-directory: pages/greycodes.net
      - uses: browser-actions/setup-chrome@v1
        if: ${{inputs.test}}
      - name: Build Angular Pages
        run: yarn run build
        working-directory: pages/greycodes.net
      - name: Test Angular Pages
        if: ${{inputs.test}}
        run: yarn run test:ci
        working-directory: pages/greycodes.net
      - name: Zip Pages
        id: zip-pages
        if: ${{inputs.package}}
        run: |
          workingDirectory=$(pwd)
          cd ./pages/greycodes.net/dist/greycodes.net/browser

          zipFile=artifact.zip
          zip -r $zipFile .

          outputDirectory=$workingDirectory/artifacts
          outputFile=$outputDirectory/$zipFile
          mkdir -p $outputDirectory
          cp ./$zipFile $outputFile

          echo 'artifact<<EOF' >> $GITHUB_OUTPUT
          echo $outputFile >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Upload Pages
        if: ${{inputs.package}}
        uses: actions/upload-artifact@v4
        with:
          name: Pages-Dist
          path: ${{steps.zip-pages.outputs.artifact}}
      - name: Zip Pages
        id: zip-coverage
        if: ${{inputs.test}}
        run: |
          workingDirectory=$(pwd)
          cd ./pages/greycodes.net/coverage

          zipFile=coverage.zip
          zip -r $zipFile .

          outputDirectory=$workingDirectory/artifacts
          outputFile=$outputDirectory/$zipFile
          mkdir -p $outputDirectory
          cp ./$zipFile $outputFile

          echo 'artifact<<EOF' >> $GITHUB_OUTPUT
          echo $outputFile >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Upload Pages
        if: ${{inputs.test}}
        uses: actions/upload-artifact@v4
        with:
          name: Pages-Coverage
          path: ${{steps.zip-pages.outputs.artifact}}
